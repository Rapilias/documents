root = true
# EditorConfig is awesome: https://EditorConfig.org
# このファイルよりも上位のEditorConfigを見ない

# special files
[LICENSE.md]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = true

[*.{editorconfig,gitignore,csproj,sln}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = true

# data and scripts
[*.{sh,xml,pubxml,yaml,yml,json,props}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = true

[*.{md}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = false

# gitkeep
[*.gitkeep]
end_of_line = lf
insert_final_newline = false
trim_trailing_whitespace = true

# shell
[*.sh]
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = false
charset = utf-8

# .NET local tool
[dotnet-tools.json]
charset = utf-8
end_of_line = crlf
trim_trailing_whitespace =
insert_final_newline =

# C#
[*.cs]
end_of_line = lf
insert_final_newline = true
charset = utf-8
indent_size = 4
indent_style = space
tab_width = 4

[*.{cs,csx}]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true

# dotnet format 専用のルール
# https://learn.microsoft.com/ja-jp/dotnet/fundamentals/code-analysis/code-style-rule-options

## 命名ルール
dotnet_naming_rule.interfaceはiで始まるpascalcase.severity = warning
dotnet_naming_rule.interfaceはiで始まるpascalcase.style = Iで始まるPascalCase
dotnet_naming_rule.interfaceはiで始まるpascalcase.symbols = interface
dotnet_naming_rule.非公開変数は_で始まるcamelcase.severity = warning
dotnet_naming_rule.非公開変数は_で始まるcamelcase.style = _で始まるcamelCase
dotnet_naming_rule.非公開変数は_で始まるcamelcase.symbols = 非公開変数
dotnet_naming_rule.const_公開変数はpascalcase.severity = warning
dotnet_naming_rule.const_公開変数はpascalcase.style = PascalCase
dotnet_naming_rule.const_公開変数はpascalcase.symbols = const_公開変数
dotnet_naming_rule.const_非公開変数はpascalcase.severity = warning
dotnet_naming_rule.const_非公開変数はpascalcase.style = PascalCase
dotnet_naming_rule.const_非公開変数はpascalcase.symbols = const_非公開変数
dotnet_naming_rule.readonly_公開変数はpascalcase.severity = warning
dotnet_naming_rule.readonly_公開変数はpascalcase.style = PascalCase
dotnet_naming_rule.readonly_公開変数はpascalcase.symbols = readonly_公開変数
dotnet_naming_rule.readonly_非公開変数はpascalcase.severity = warning
dotnet_naming_rule.readonly_非公開変数はpascalcase.style = PascalCase
dotnet_naming_rule.readonly_非公開変数はpascalcase.symbols = readonly_非公開変数
dotnet_naming_rule.publicかつstaticプロパティはcamelcase.severity = warning
dotnet_naming_rule.publicかつstaticプロパティはcamelcase.style = camelCase
dotnet_naming_rule.publicかつstaticプロパティはcamelcase.symbols = public_static_プロパティ
dotnet_naming_rule.publicプロパティはcamelcase.severity = warning
dotnet_naming_rule.publicプロパティはcamelcase.style = camelCase
dotnet_naming_rule.publicプロパティはcamelcase.symbols = public_プロパティ
dotnet_naming_rule.型はpascalcase.severity = warning
dotnet_naming_rule.型はpascalcase.style = PascalCase
dotnet_naming_rule.型はpascalcase.symbols = 型
dotnet_naming_rule.非同期関数はasyncで終わるpascalcase.severity = warning
dotnet_naming_rule.非同期関数はasyncで終わるpascalcase.style = Asyncで終わるPascalCase
dotnet_naming_rule.非同期関数はasyncで終わるpascalcase.symbols = 非同期関数
### 命名ルールに関連づくスタイル
dotnet_naming_style._で始まるcamelcase.capitalization = camel_case
dotnet_naming_style._で始まるcamelcase.required_prefix = _
dotnet_naming_style._で始まるcamelcase.required_suffix = 
dotnet_naming_style._で始まるcamelcase.word_separator = 
dotnet_naming_style.asyncで終わるpascalcase.capitalization = pascal_case
dotnet_naming_style.asyncで終わるpascalcase.required_prefix = 
dotnet_naming_style.asyncで終わるpascalcase.required_suffix = Async
dotnet_naming_style.asyncで終わるpascalcase.word_separator = 
dotnet_naming_style.iで始まるpascalcase.capitalization = pascal_case
dotnet_naming_style.iで始まるpascalcase.required_prefix = I
dotnet_naming_style.iで始まるpascalcase.required_suffix = 
dotnet_naming_style.iで始まるpascalcase.word_separator = 
dotnet_naming_style.camelcase.capitalization = camel_case
dotnet_naming_style.camelcase.required_prefix = 
dotnet_naming_style.camelcase.required_suffix = 
dotnet_naming_style.camelcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case
dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.aで始まるpascalcase.capitalization = pascal_case
dotnet_naming_style.aで始まるpascalcase.required_prefix = A
dotnet_naming_style.aで始まるpascalcase.required_suffix = 
dotnet_naming_style.aで始まるpascalcase.word_separator = 
### 命名ルールに関連づくシンボル
dotnet_naming_symbols.非公開変数.applicable_accessibilities = private, protected, private_protected, protected_internal
dotnet_naming_symbols.非公開変数.applicable_kinds = field
dotnet_naming_symbols.非公開変数.required_modifiers = 
dotnet_naming_symbols.非公開プロパティ.applicable_accessibilities = private, protected, private_protected, protected_internal
dotnet_naming_symbols.非公開プロパティ.applicable_kinds = property
dotnet_naming_symbols.非公開プロパティ.required_modifiers = 
dotnet_naming_symbols.const_非公開変数.applicable_accessibilities = private, protected, private_protected, protected_internal
dotnet_naming_symbols.const_非公開変数.applicable_kinds = field
dotnet_naming_symbols.const_非公開変数.required_modifiers = const
dotnet_naming_symbols.const_公開変数.applicable_accessibilities = public, internal
dotnet_naming_symbols.const_公開変数.applicable_kinds = field
dotnet_naming_symbols.const_公開変数.required_modifiers = const
dotnet_naming_symbols.readonly_非公開変数.applicable_accessibilities = private, protected, private_protected, protected_internal
dotnet_naming_symbols.readonly_非公開変数.applicable_kinds = field
dotnet_naming_symbols.readonly_非公開変数.required_modifiers = readonly
dotnet_naming_symbols.readonly_公開変数.applicable_accessibilities = public, internal
dotnet_naming_symbols.readonly_公開変数.applicable_kinds = field
dotnet_naming_symbols.readonly_公開変数.required_modifiers = readonly
dotnet_naming_symbols.public_static_プロパティ.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_static_プロパティ.applicable_kinds = property
dotnet_naming_symbols.public_static_プロパティ.required_modifiers = static
dotnet_naming_symbols.public_プロパティ.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_symbols.public_プロパティ.applicable_kinds = property
dotnet_naming_symbols.public_プロパティ.required_modifiers = 
dotnet_naming_symbols.型.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.型.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.型.required_modifiers = 
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.required_modifiers = 
dotnet_naming_symbols.非同期関数.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.非同期関数.applicable_kinds = method, local_function
dotnet_naming_symbols.非同期関数.required_modifiers = async
dotnet_naming_symbols.抽象クラス.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.抽象クラス.applicable_kinds = class
dotnet_naming_symbols.抽象クラス.required_modifiers = abstract

## その他ルール
[*.{cs,vb}]
# 未使用のパラメーターに対する警告をすべて出力する
dotnet_code_quality_unused_parameters = all:warning
# XMLドキュメントコメントがない場合に出力する警告を無効にする
dotnet_diagnostic.cs1591.severity = none
# IDE005: using ステートメントを使用していない名前空間を削除する
dotnet_diagnostic.ide0005.severity = warning
# IDE009: インスタンスの初期化子を使用していないフィールドを削除する
dotnet_diagnostic.ide0009.severity = warning
# 不要な抑制の除外を無効にする
dotnet_remove_unnecessary_suppression_exclusions = none
# 複数の空白行を許可する
dotnet_style_allow_multiple_blank_lines_experimental = true:silent
# ブロックの直後に文を許可しない
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
# null 合体演算子を使用する
dotnet_style_coalesce_expression = true:warning
# コレクション初期化子を使用する
dotnet_style_collection_initializer = true:warning
# タプルの名前を明示的に指定する
dotnet_style_explicit_tuple_names = true:warning
# null 条件演算子を使用する
dotnet_style_null_propagation = true:warning
# オブジェクト初期化子を使用する
dotnet_style_object_initializer = true:warning
# 演算子の前に括弧を置く
dotnet_style_operator_placement_when_wrapping = beginning_of_line
# 算術二項演算子の前に括弧を置く
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
# その他の二項演算子の前に括弧を置く
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
# その他の演算子の前に括弧を置かない
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
# 関係演算子の前に括弧を置く
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
# ローカル変数、パラメーター、メンバーには組み込み型を使用する
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
# メンバーアクセスには組み込み型を使用する
dotnet_style_predefined_type_for_member_access = true:suggestion
# 自動プロパティを使用する
dotnet_style_prefer_auto_properties = true:silent
# 複合代入演算子を使用する
dotnet_style_prefer_compound_assignment = true:warning
# 条件演算子を使用する
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
# 条件演算子を使用する
dotnet_style_prefer_conditional_expression_over_return = true:silent
# 匿名型のメンバー名を推測する
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
# タプルの名前を推測する
dotnet_style_prefer_inferred_tuple_names = true:warning
# 参照等価性メソッドよりも null チェックを使用する
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
# 単純化されたブール式を使用する
dotnet_style_prefer_simplified_boolean_expressions = true:warning
# 単純化された補間を使用する
dotnet_style_prefer_simplified_interpolation = true:warning
# イベントには this を使用する
dotnet_style_qualification_for_event = true:warning
# フィールドには this を使用する
dotnet_style_qualification_for_field = true:warning
# メソッドには this を使用する
dotnet_style_qualification_for_method = true:warning
# プロパティには this を使用する
dotnet_style_qualification_for_property = true:warning
# 読み取り専用フィールドを許可する
dotnet_style_readonly_field = false:warning
# アクセシビリティ修飾子を要求する
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning

[*.cs]
# LINQクエリ式を揃える
csharp_align_linq_query = false
# 複数行の引数を揃える
csharp_align_multiline_argument = true
# 複数行のメソッドチェーンを揃えない
csharp_align_multiline_calls_chain = false
# 複数行の継承リストを揃えない
csharp_align_multiline_extends_list = false
# 複数行のパラメータを揃える
csharp_align_multiline_parameter = true
# 複数行の型パラメータの制約を揃える
csharp_align_multline_type_parameter_constrains = true
# 複数行の型パラメータリストを揃える
csharp_align_multline_type_parameter_list = true
# タプルの要素を揃える
csharp_align_tuple_components = true
# 不要な括弧のハイライトをヒントにする
csharp_arrange_redundant_parentheses_highlighting = hint
# this修飾子のハイライトをヒントにする
csharp_arrange_this_qualifier_highlighting = hint
# 型メンバーの修飾子のハイライトをヒントにする
csharp_arrange_type_member_modifiers_highlighting = hint
# 型の修飾子のハイライトをヒントにする
csharp_arrange_type_modifiers_highlighting = hint
# 自動プロパティをget-onlyにできることをヒントにする
csharp_auto_property_can_be_made_get_only_local_highlighting = hint
# インデント設定を自動検出する
csharp_autodetect_indent_settings = false
# ブロック文の後に空行を0行にする
csharp_blank_lines_after_block_statements = 0
# 制御転送文の後に空行を1行にする
csharp_blank_lines_after_control_transfer_statements = 1
# コメントの後に空行を0行にする
csharp_blank_lines_after_start_comment = 0
# アクセサの周りに空行を0行にする
csharp_blank_lines_around_accessor = 0
# 自動プロパティの周りに空行を0行にする
csharp_blank_lines_around_auto_property = 0
# フィールドの周りに空行を0行にする
csharp_blank_lines_around_field = 0
# 呼び出し可能な要素の周りに空行を1行にする
csharp_blank_lines_around_invocable = 1
# ローカルメソッドの周りに空行を0行にする
csharp_blank_lines_around_local_method = 0
# プロパティの周りに空行を0行にする
csharp_blank_lines_around_property = 0
# #regionの周りに空行を1行にする
csharp_blank_lines_around_region = 1
# 1行のアクセサの周りに空行を0行にする
csharp_blank_lines_around_single_line_accessor = 0
# 1行の自動プロパティの周りに空行を0行にする
csharp_blank_lines_around_single_line_auto_property = 0
# 1行のフィールドの周りに空行を0行にする
csharp_blank_lines_around_single_line_field = 0
# 1行の呼び出し可能な要素の周りに空行を0行にする
csharp_blank_lines_around_single_line_invocable = 0
# 1行のプロパティの周りに空行を0行にする
csharp_blank_lines_around_single_line_property = 0
# 1行の型の周りに空行を0行にする
csharp_blank_lines_around_single_line_type = 0
# 型の周りに空行を1行にする
csharp_blank_lines_around_type = 1
# ブロック文の前に空行を0行にする
csharp_blank_lines_before_block_statements = 0
# usingグループの間に空行を0行にする
csharp_blank_lines_between_using_groups = 0
# リージョン内に空行を0行にする
csharp_blank_lines_inside_region = 0
# 波括弧のスタイルを次の行にする
csharp_brace_style = next_line
# メンバーアクセスにおける組み込み型の参照スタイルをヒントにする
csharp_built_in_type_reference_style_for_member_access_highlighting = hint
# 組み込み型の参照スタイルをヒントにする
csharp_built_in_type_reference_style_highlighting = hint
# 名前空間のハイライトを無効にする
csharp_check_namespace_highlighting = none
# コメントのタイポのハイライトを無効にする
csharp_comment_typo_highlighting = none
# 空のブロックのスタイルを同じ行にする
csharp_empty_block_style = together_same_line
# 行末のスタイルを強制する
csharp_enforce_line_ending_style = true
# フィールドをread-onlyにできることをヒントにする
csharp_field_can_be_made_read_only_local_highlighting = none
# 識別子のタイポのハイライトを無効にする
csharp_identifier_typo_highlighting = none
# 命名の不一致のハイライトを無効にする
csharp_inconsistent_naming_highlighting = none
# ブロック内のコンテンツをインデントする
csharp_indent_block_contents = true
# 文の条件式内の波括弧をインデントしない
csharp_indent_braces_inside_statement_conditions = false
# case内のコンテンツをインデントする
csharp_indent_case_contents = true
# case内のブロックはインデントしない
csharp_indent_case_contents_when_block = false
# ラベルをインデントする
csharp_indent_labels = one_less_than_current
# コード内の空行を1行に保つ
csharp_keep_blank_lines_in_code = 1
# 宣言内の空行を1行に保つ
csharp_keep_blank_lines_in_declarations = 1
# 既存の配置を保つ
csharp_keep_existing_arrangement = true
# 既存の属性の配置を保つ
csharp_keep_existing_attribute_arrangement = true
# 既存の宣言の括弧の配置を保つ
csharp_keep_existing_declaration_parens_arrangement = true
# 既存の埋め込みの配置を保つ
csharp_keep_existing_embedded_arrangement = false
# 既存の式メンバーの配置を保つ
csharp_keep_existing_expr_member_arrangement = false
# 既存の初期化子の配置を保つ
csharp_keep_existing_initializer_arrangement = false
# 既存の呼び出しの括弧の配置を保つ
csharp_keep_existing_invocation_parens_arrangement = false
# 既存の改行を保つ
csharp_keep_existing_linebreaks = false
# 既存のプロパティパターンの配置を保つ
csharp_keep_existing_property_patterns_arrangement = false
# 既存のswitch式の配置を保つ
csharp_keep_existing_switch_expression_arrangement = false
# C#の改行を保持する
csharp_keep_user_linebreaks = true
# マークアップ属性のタイポのハイライトを無効にする
csharp_markup_attribute_typo_highlighting = none
# マークアップテキストのタイポのハイライトを無効にする
csharp_markup_text_typo_highlighting = none
# 配列初期化子の要素数の最大値を1にする
csharp_max_array_initializer_elements_on_line = 1
# 列挙型のメンバー数の最大値を1にする
csharp_max_enum_members_on_line = 1
# 初期化子の要素数の最大値を1にする
csharp_max_initializer_elements_on_line = 1
# メソッド呼び出しの引数の最大数を6にする
csharp_max_invocation_arguments_on_line = 6
# 匿名型のメンバーの前に改行を挿入する
csharp_new_line_before_members_in_anonymous_types = true
# オブジェクト初期化子のメンバーの前に改行を挿入しない
csharp_new_line_before_members_in_object_initializers = false
# while文の前に改行を挿入する
csharp_new_line_before_while = true
# オブジェクトの作成時に型を明示的に指定する
csharp_object_creation_when_type_evident = explicitly_typed
# 単一部分の部分型のハイライトを無効にする
csharp_partial_type_with_single_part_highlighting = none
# 抽象アクセサホルダーを単一行に配置する
csharp_place_abstract_accessorholder_on_single_line = true
# アクセサ属性を同じ行に配置する
csharp_place_accessor_attribute_on_same_line = true
# アクセサホルダー属性を同じ行に配置しない
csharp_place_accessorholder_attribute_on_same_line = false
# 属性を同じ行に配置しない
csharp_place_attribute_on_same_line = false
# フィールド属性を同じ行に配置しない
csharp_place_field_attribute_on_same_line = false
# LINQのinto句を同じ行に配置しない
csharp_place_linq_into_on_new_line = false
# 単純なアクセサホルダーを単一行に配置する
csharp_place_simple_accessorholder_on_single_line = true
# 単純な匿名メソッドを単一行に配置しない
csharp_place_simple_anonymousmethod_on_single_line = false
# 単純なブロックを単一行に配置する
csharp_place_simple_blocks_on_single_line = true
# 単純なcase文を同じ行に配置しない
csharp_place_simple_case_statement_on_same_line = false
# 単純な宣言ブロックを単一行に配置する
csharp_place_simple_declaration_blocks_on_single_line = true
# 単純な埋め込みブロックを同じ行に配置しない
csharp_place_simple_embedded_block_on_same_line = false
# 単純な埋め込み文を同じ行に配置しない
csharp_place_simple_embedded_statement_on_same_line = false
# 単純な初期化子を単一行に配置しない
csharp_place_simple_initializer_on_single_line = false
# 単純なメソッドを単一行に配置しない
csharp_place_simple_method_on_single_line = false
# 単純なプロパティパターンを単一行に配置する
csharp_place_simple_property_pattern_on_single_line = true
# 複数行の時ブレース({})を使用する
csharp_prefer_braces = when_multiline:warning
# 単純なデフォルト式を使用する
csharp_prefer_simple_default_expression = true:warning
# 単純なusingステートメントを使用する
csharp_prefer_simple_using_statement = true:warning
# 静的なローカル関数を使用する
csharp_prefer_static_local_function = true:warning
# 修飾子の順序を指定する
csharp_preferred_modifier_order = public, private, protected, internal, new, static, abstract, virtual, sealed, readonly, override, extern, unsafe, volatile, async, file, required:warning
# 単一行の文を保持しない
csharp_preserve_single_line_statements = false
# 基底クラスの修飾子を削除する
csharp_redundant_base_qualifier_highlighting = warning
# メンバーの初期化子を削除する
csharp_redundant_default_member_initializer_highlighting = none
# コード内の括弧の近くの空白行を削除する
csharp_remove_blank_lines_near_braces_in_code = true
# 宣言内の括弧の近くの空白行を削除する
csharp_remove_blank_lines_near_braces_in_declarations = true
# 自動検出の設定を表示しない
csharp_show_autodetect_configure_formatting_tip = false
# 制御フロー文のキーワードの後に空白を挿入しない
csharp_space_after_keywords_in_control_flow_statements = false
# 単項演算子の後に空白を挿入する
csharp_space_after_unary_operator = true
# 宣言文の周りに空白を挿入しない
csharp_space_around_declaration_statements = false
# メンバーアクセス演算子の周りに空白を挿入しない
csharp_space_around_member_access_operator = false
# 三項演算子の周りに空白を挿入する
csharp_space_around_ternary_operator = true
# 制御フロー文の括弧の中の空白を挿入しない
csharp_space_between_parentheses_of_control_flow_statements = false
# 配列初期化子の括弧の中の空白を挿入しない
csharp_space_within_single_line_array_initializer_braces = false
# 特別なelse if文を使用する
csharp_special_else_if_treatment = true
# コメントを挿入しない
csharp_stick_comment = false
# コンストラクタの初期化子のコロンの後に空白行を挿入する
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
# 連続する括弧の間に空白行を挿入する
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
# 同じ行に埋め込み文を配置する
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
# 条件付きデリゲート呼び出しを使用する
csharp_style_conditional_delegate_call = true:warning
# 条件付きデリゲート呼び出しを使用する
csharp_style_conditional_delegate_call = true:warning
# 分解変数宣言を使用する
csharp_style_deconstructed_variable_declaration = true:warning
# 式ボディのアクセサを使用する
csharp_style_expression_bodied_accessors = true:warning
# 式ボディのコンストラクタを使用しない
csharp_style_expression_bodied_constructors = false:warning
# 式ボディのインデクサを使用する
csharp_style_expression_bodied_indexers = true:warning
# 式ボディのラムダ式を使用する
csharp_style_expression_bodied_lambdas = when_on_single_line:warning
# 式ボディのローカル関数を使用する
csharp_style_expression_bodied_local_functions = when_on_single_line:warning
# 式ボディのメソッドを使用しない
csharp_style_expression_bodied_methods = true:warning
# 式ボディの演算子を使用する
csharp_style_expression_bodied_operators = when_on_single_line:warning
# 式ボディのプロパティを使用する
csharp_style_expression_bodied_properties = true:warning
# 明らかな型の場合に暗黙的なオブジェクト作成を使用しない
csharp_style_implicit_object_creation_when_type_is_apparent = false
# 変数宣言をインライン化する
csharp_style_inlined_variable_declaration = true:warning
# 名前空間宣言をブロックスコープにする
csharp_style_namespace_declarations = block_scoped:warning
# パターンローカル変数を使用する
csharp_style_pattern_local_over_anonymous_function = true:warning
# nullチェックを伴うas演算子よりもパターンマッチングを使用する
csharp_style_pattern_matching_over_as_with_null_check = true:warning
# キャストチェックを伴うis演算子よりもパターンマッチングを使用する
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
# インデックス演算子を使用しない
csharp_style_prefer_index_operator = false:warning
# パターンマッチングを使用する
csharp_style_prefer_pattern_matching = true:warning
# 範囲演算子を使用しない
csharp_style_prefer_range_operator = false:warning
# switch式を使用する
csharp_style_prefer_switch_expression = true:warning
# throw式を使用する
csharp_style_throw_expression = true:warning
# 未使用の値の代入を使用しない
csharp_style_unused_value_assignment_preference = false:silent
# 未使用の値の式文を使用しない
csharp_style_unused_value_expression_statement_preference = false:silent
# varを使用する
csharp_style_var_elsewhere = true:suggestion
# 組み込み型に対してvarを使用する
csharp_style_var_for_built_in_types = true:suggestion
# 明らかな型の場合にvarを使用する
csharp_style_var_when_type_is_apparent = true:suggestion
# 組み込み型に対してvarを使用するか、型を指定するかをヒントとして表示する
csharp_suggest_var_or_type_built_in_types_highlighting = hint
# varを使用するか、型を指定するかをヒントとして表示する
csharp_suggest_var_or_type_elsewhere_highlighting = hint
# 単純な型に対してvarを使用するか、型を指定するかをヒントとして表示する
csharp_suggest_var_or_type_simple_types_highlighting = hint
# 複数行のリストの末尾にカンマを挿入する
csharp_trailing_comma_in_multiline_lists = true
# 1行のリストの末尾にカンマを挿入する
csharp_trailing_comma_in_singleline_lists = true
# 未使用のメンバーをハイライトしない
csharp_unused_member_global_highlighting = none
# 初期化子の括弧の中の空白を挿入しない
csharp_use_continuous_indent_inside_initializer_braces = false
# 名前空間宣言を名前空間の外に配置する
# メソッド呼び出しの左括弧の後に改行を挿入する
csharp_wrap_after_invocation_lpar = true
# 引数のラップスタイルを指定する
csharp_wrap_arguments_style = chop_if_long
# カンマの前に改行を挿入しない
csharp_wrap_before_comma = false
# 型パラメーター制約の前に改行を挿入する
csharp_wrap_before_first_type_parameter_constraint = true
# メソッド呼び出しの右括弧の前に改行を挿入する
csharp_wrap_before_invocation_rpar = true
# メソッド呼び出しのチェーンをラップする
csharp_wrap_chained_method_calls = chop_if_long
# ステートメントヘッダーのラップスタイルを指定する
csharp_wrap_for_stmt_header_style = wrap_if_long
# 行をラップしない
csharp_wrap_lines = false
# オブジェクト初期化子とコレクション初期化子のラップスタイルを指定する
csharp_wrap_object_and_collection_initializer_style = wrap_if_long
# プロパティパターンのラップスタイルを指定する
csharp_wrap_property_pattern = chop_if_long

# Microsoft .NET properties
csharp_preserve_single_line_blocks = true
csharp_space_after_cast = false
csharp_style_prefer_utf8_string_literals = true:suggestion
dotnet_diagnostic.cs1591.severity = none
dotnet_naming_rule.const_公開変数はpascalcase_rule.import_to_resharper = True
dotnet_naming_rule.const_公開変数はpascalcase_rule.resharper_description = const_公開変数はpascalcase
dotnet_naming_rule.const_公開変数はpascalcase_rule.resharper_guid = 3e10f44a-81b7-468b-b99e-4bab8b4b9584
dotnet_naming_rule.const_公開変数はpascalcase_rule.severity = warning
dotnet_naming_rule.const_公開変数はpascalcase_rule.style = upper_camel_case_style
dotnet_naming_rule.const_公開変数はpascalcase_rule.symbols = const_公開変数はpascalcase_symbols
dotnet_naming_rule.const_非公開変数はpascalcase_rule.import_to_resharper = True
dotnet_naming_rule.const_非公開変数はpascalcase_rule.resharper_description = const_非公開変数はpascalcase
dotnet_naming_rule.const_非公開変数はpascalcase_rule.resharper_guid = ba95ddd0-f83f-477d-8162-640fe6e1dd60
dotnet_naming_rule.const_非公開変数はpascalcase_rule.severity = warning
dotnet_naming_rule.const_非公開変数はpascalcase_rule.style = upper_camel_case_style
dotnet_naming_rule.const_非公開変数はpascalcase_rule.symbols = const_非公開変数はpascalcase_symbols
dotnet_naming_rule.interfaceはiで始まるpascalcase_rule.import_to_resharper = True
dotnet_naming_rule.interfaceはiで始まるpascalcase_rule.resharper_description = interfaceはiで始まるpascalcase
dotnet_naming_rule.interfaceはiで始まるpascalcase_rule.resharper_guid = c3e6524b-c06f-42f0-a734-1c7212993f35
dotnet_naming_rule.interfaceはiで始まるpascalcase_rule.severity = warning
dotnet_naming_rule.interfaceはiで始まるpascalcase_rule.style = i_upper_camel_case_style
dotnet_naming_rule.interfaceはiで始まるpascalcase_rule.symbols = interfaceはiで始まるpascalcase_symbols
dotnet_naming_rule.property_rule.import_to_resharper = as_predefined
dotnet_naming_rule.property_rule.severity = warning
dotnet_naming_rule.property_rule.style = lower_camel_case_style
dotnet_naming_rule.property_rule.symbols = property_symbols
dotnet_naming_rule.publicかつstaticプロパティはcamelcase_rule.import_to_resharper = True
dotnet_naming_rule.publicかつstaticプロパティはcamelcase_rule.resharper_description = publicかつstaticプロパティはcamelcase
dotnet_naming_rule.publicかつstaticプロパティはcamelcase_rule.resharper_guid = 5d2a1f31-8b21-439b-b4b8-d6da014d0285
dotnet_naming_rule.publicかつstaticプロパティはcamelcase_rule.severity = warning
dotnet_naming_rule.publicかつstaticプロパティはcamelcase_rule.style = lower_camel_case_style
dotnet_naming_rule.publicかつstaticプロパティはcamelcase_rule.symbols = publicかつstaticプロパティはcamelcase_symbols
dotnet_naming_rule.publicプロパティはcamelcase_rule.import_to_resharper = True
dotnet_naming_rule.publicプロパティはcamelcase_rule.resharper_description = publicプロパティはcamelcase
dotnet_naming_rule.publicプロパティはcamelcase_rule.resharper_guid = 61a72cdf-025a-4df7-a3c3-78917dec47e2
dotnet_naming_rule.publicプロパティはcamelcase_rule.severity = warning
dotnet_naming_rule.publicプロパティはcamelcase_rule.style = lower_camel_case_style
dotnet_naming_rule.publicプロパティはcamelcase_rule.symbols = publicプロパティはcamelcase_symbols
dotnet_naming_rule.readonly_公開変数はpascalcase_rule.import_to_resharper = True
dotnet_naming_rule.readonly_公開変数はpascalcase_rule.resharper_description = readonly_公開変数はpascalcase
dotnet_naming_rule.readonly_公開変数はpascalcase_rule.resharper_guid = d5c3c348-9c68-4f99-8676-6dcce7d8050b
dotnet_naming_rule.readonly_公開変数はpascalcase_rule.severity = warning
dotnet_naming_rule.readonly_公開変数はpascalcase_rule.style = upper_camel_case_style
dotnet_naming_rule.readonly_公開変数はpascalcase_rule.symbols = readonly_公開変数はpascalcase_symbols
dotnet_naming_rule.readonly_非公開変数はpascalcase_rule.import_to_resharper = True
dotnet_naming_rule.readonly_非公開変数はpascalcase_rule.resharper_description = readonly_非公開変数はpascalcase
dotnet_naming_rule.readonly_非公開変数はpascalcase_rule.resharper_guid = 13349271-e008-4a04-9b0d-41069b5374e7
dotnet_naming_rule.readonly_非公開変数はpascalcase_rule.severity = warning
dotnet_naming_rule.readonly_非公開変数はpascalcase_rule.style = upper_camel_case_style
dotnet_naming_rule.readonly_非公開変数はpascalcase_rule.symbols = readonly_非公開変数はpascalcase_symbols
dotnet_naming_rule.型はpascalcase_rule.import_to_resharper = True
dotnet_naming_rule.型はpascalcase_rule.resharper_description = 型はpascalcase
dotnet_naming_rule.型はpascalcase_rule.resharper_guid = feea3c63-038f-4bff-97d3-fd034f76f3ca
dotnet_naming_rule.型はpascalcase_rule.severity = warning
dotnet_naming_rule.型はpascalcase_rule.style = upper_camel_case_style
dotnet_naming_rule.型はpascalcase_rule.symbols = 型はpascalcase_symbols
dotnet_naming_rule.非公開変数は_で始まるcamelcase_rule.import_to_resharper = True
dotnet_naming_rule.非公開変数は_で始まるcamelcase_rule.resharper_description = 非公開変数は_で始まるcamelcase
dotnet_naming_rule.非公開変数は_で始まるcamelcase_rule.resharper_guid = f153033c-1a49-4ec9-a92f-ca2764f60714
dotnet_naming_rule.非公開変数は_で始まるcamelcase_rule.severity = warning
dotnet_naming_rule.非公開変数は_で始まるcamelcase_rule.style = lower_camel_case_style_1
dotnet_naming_rule.非公開変数は_で始まるcamelcase_rule.symbols = 非公開変数は_で始まるcamelcase_symbols
dotnet_naming_rule.非同期関数はasyncで終わるpascalcase_rule.import_to_resharper = True
dotnet_naming_rule.非同期関数はasyncで終わるpascalcase_rule.resharper_description = 非同期関数はasyncで終わるpascalcase
dotnet_naming_rule.非同期関数はasyncで終わるpascalcase_rule.resharper_guid = b6412835-1af3-4af2-8587-a249e6a1216b
dotnet_naming_rule.非同期関数はasyncで終わるpascalcase_rule.severity = warning
dotnet_naming_rule.非同期関数はasyncで終わるpascalcase_rule.style = upper_camel_case_async_style
dotnet_naming_rule.非同期関数はasyncで終わるpascalcase_rule.symbols = 非同期関数はasyncで終わるpascalcase_symbols
dotnet_naming_style.i_upper_camel_case_style.capitalization = pascal_case
dotnet_naming_style.i_upper_camel_case_style.required_prefix = I
dotnet_naming_style.lower_camel_case_style.capitalization = camel_case
dotnet_naming_style.lower_camel_case_style_1.capitalization = camel_case
dotnet_naming_style.lower_camel_case_style_1.required_prefix = _
dotnet_naming_style.upper_camel_case_async_style.capitalization = pascal_case
dotnet_naming_style.upper_camel_case_async_style.required_suffix = Async
dotnet_naming_style.upper_camel_case_style.capitalization = pascal_case
dotnet_naming_symbols.const_公開変数はpascalcase_symbols.applicable_accessibilities = local,public,internal
dotnet_naming_symbols.const_公開変数はpascalcase_symbols.applicable_kinds = field
dotnet_naming_symbols.const_公開変数はpascalcase_symbols.required_modifiers = const
dotnet_naming_symbols.const_公開変数はpascalcase_symbols.resharper_applicable_kinds = constant_field
dotnet_naming_symbols.const_公開変数はpascalcase_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.const_非公開変数はpascalcase_symbols.applicable_accessibilities = local,private,protected,protected_internal,private_protected
dotnet_naming_symbols.const_非公開変数はpascalcase_symbols.applicable_kinds = field
dotnet_naming_symbols.const_非公開変数はpascalcase_symbols.required_modifiers = const
dotnet_naming_symbols.const_非公開変数はpascalcase_symbols.resharper_applicable_kinds = constant_field
dotnet_naming_symbols.const_非公開変数はpascalcase_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.interfaceはiで始まるpascalcase_symbols.applicable_accessibilities = local,public,internal,private,protected,protected_internal,private_protected
dotnet_naming_symbols.interfaceはiで始まるpascalcase_symbols.applicable_kinds = interface
dotnet_naming_symbols.interfaceはiで始まるpascalcase_symbols.resharper_applicable_kinds = interface
dotnet_naming_symbols.interfaceはiで始まるpascalcase_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.property_symbols.applicable_accessibilities = *
dotnet_naming_symbols.property_symbols.applicable_kinds = property
dotnet_naming_symbols.publicかつstaticプロパティはcamelcase_symbols.applicable_accessibilities = local,public,internal
dotnet_naming_symbols.publicかつstaticプロパティはcamelcase_symbols.applicable_kinds = property
dotnet_naming_symbols.publicかつstaticプロパティはcamelcase_symbols.required_modifiers = static
dotnet_naming_symbols.publicかつstaticプロパティはcamelcase_symbols.resharper_applicable_kinds = property
dotnet_naming_symbols.publicかつstaticプロパティはcamelcase_symbols.resharper_required_modifiers = static
dotnet_naming_symbols.publicプロパティはcamelcase_symbols.applicable_accessibilities = local,public,internal,protected,protected_internal
dotnet_naming_symbols.publicプロパティはcamelcase_symbols.applicable_kinds = property
dotnet_naming_symbols.publicプロパティはcamelcase_symbols.resharper_applicable_kinds = property
dotnet_naming_symbols.publicプロパティはcamelcase_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.readonly_公開変数はpascalcase_symbols.applicable_accessibilities = local,public,internal
dotnet_naming_symbols.readonly_公開変数はpascalcase_symbols.applicable_kinds = field
dotnet_naming_symbols.readonly_公開変数はpascalcase_symbols.required_modifiers = readonly
dotnet_naming_symbols.readonly_公開変数はpascalcase_symbols.resharper_applicable_kinds = readonly_field
dotnet_naming_symbols.readonly_公開変数はpascalcase_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.readonly_非公開変数はpascalcase_symbols.applicable_accessibilities = local,private,protected,protected_internal,private_protected
dotnet_naming_symbols.readonly_非公開変数はpascalcase_symbols.applicable_kinds = field
dotnet_naming_symbols.readonly_非公開変数はpascalcase_symbols.required_modifiers = readonly
dotnet_naming_symbols.readonly_非公開変数はpascalcase_symbols.resharper_applicable_kinds = readonly_field
dotnet_naming_symbols.readonly_非公開変数はpascalcase_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.型はpascalcase_symbols.applicable_accessibilities = local,public,internal,private,protected,protected_internal,private_protected
dotnet_naming_symbols.型はpascalcase_symbols.applicable_kinds = class,struct,interface,enum
dotnet_naming_symbols.型はpascalcase_symbols.resharper_applicable_kinds = class,struct,interface,enum
dotnet_naming_symbols.型はpascalcase_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.非公開変数は_で始まるcamelcase_symbols.applicable_accessibilities = local,private,protected,protected_internal,private_protected
dotnet_naming_symbols.非公開変数は_で始まるcamelcase_symbols.applicable_kinds = field
dotnet_naming_symbols.非公開変数は_で始まるcamelcase_symbols.resharper_applicable_kinds = any_field
dotnet_naming_symbols.非公開変数は_で始まるcamelcase_symbols.resharper_required_modifiers = any
dotnet_naming_symbols.非同期関数はasyncで終わるpascalcase_symbols.applicable_accessibilities = local,public,internal,private,protected,protected_internal,private_protected
dotnet_naming_symbols.非同期関数はasyncで終わるpascalcase_symbols.applicable_kinds = method
dotnet_naming_symbols.非同期関数はasyncで終わるpascalcase_symbols.required_modifiers = async
dotnet_naming_symbols.非同期関数はasyncで終わるpascalcase_symbols.resharper_applicable_kinds = async_method
dotnet_naming_symbols.非同期関数はasyncで終わるpascalcase_symbols.resharper_required_modifiers = any
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning
dotnet_style_qualification_for_event = true:warning
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_property = true:warning
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning

# ReSharper properties
resharper_align_multiline_binary_expressions_chain = false
resharper_align_multiline_statement_conditions = false
resharper_align_multline_type_parameter_constrains = false
resharper_align_multline_type_parameter_list = false
resharper_align_tuple_components = false
resharper_arguments_literal = named
resharper_arguments_other = named
resharper_arguments_skip_single = true
resharper_autodetect_indent_settings = true
resharper_blank_lines_after_block_statements = 0
resharper_blank_lines_after_control_transfer_statements = 1
resharper_blank_lines_after_start_comment = 1
resharper_blank_lines_around_auto_property = 0
resharper_blank_lines_around_local_method = 0
resharper_blank_lines_around_property = 0
resharper_blank_lines_around_single_line_type = 0
resharper_braces_for_dowhile = required
resharper_braces_for_fixed = required
resharper_braces_for_for = required_for_multiline
resharper_braces_for_foreach = required_for_multiline
resharper_braces_for_ifelse = required_for_multiline
resharper_braces_for_lock = required
resharper_braces_for_using = required
resharper_braces_for_while = required_for_multiline
resharper_csharp_align_multiline_argument = false
resharper_csharp_align_multiline_parameter = false
resharper_csharp_blank_lines_around_field = 0
resharper_csharp_blank_lines_inside_region = 0
resharper_csharp_empty_block_style = together_same_line
resharper_csharp_int_align_fix_in_adjacent = false
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_max_line_length = 200
resharper_csharp_space_after_unary_operator = true
resharper_csharp_stick_comment = false
resharper_csharp_wrap_after_invocation_lpar = true
resharper_csharp_wrap_before_declaration_rpar = true
resharper_csharp_wrap_before_first_type_parameter_constraint = true
resharper_csharp_wrap_before_invocation_rpar = true
resharper_csharp_wrap_multiple_type_parameter_constraints_style = wrap_if_long
resharper_csharp_wrap_ternary_expr_style = chop_always
resharper_enforce_line_ending_style = true
resharper_force_attribute_style = join
resharper_indent_braces_inside_statement_conditions = false
resharper_indent_preprocessor_directives = normal
resharper_indent_preprocessor_region = no_indent
resharper_indent_raw_literal_string = do_not_change
resharper_keep_existing_arrangement = false
resharper_keep_existing_attribute_arrangement = false
resharper_keep_existing_declaration_block_arrangement = false
resharper_keep_existing_declaration_parens_arrangement = false
resharper_keep_existing_embedded_block_arrangement = false
resharper_keep_existing_enum_arrangement = false
resharper_keep_existing_list_patterns_arrangement = false
resharper_linebreaks_inside_tags_for_multiline_elements = true
resharper_local_function_body = block_body
resharper_max_array_initializer_elements_on_line = 1
resharper_max_attribute_length_for_same_line = 6
resharper_max_enum_members_on_line = 1
resharper_max_initializer_elements_on_line = 1
resharper_max_invocation_arguments_on_line = 6
resharper_nested_ternary_style = expanded
resharper_new_line_before_while = true
resharper_object_creation_when_type_evident = explicitly_typed
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_accessor_attribute_on_same_line = true
resharper_place_field_attribute_on_same_line = false
resharper_place_linq_into_on_new_line = false
resharper_place_record_field_attribute_on_same_line = false
resharper_place_simple_embedded_statement_on_same_line = false
resharper_place_simple_initializer_on_single_line = true
resharper_place_simple_property_pattern_on_single_line = true
resharper_place_type_attribute_on_same_line = false
resharper_prefer_explicit_discard_declaration = true
resharper_remove_blank_lines_near_braces_in_declarations = true
resharper_show_autodetect_configure_formatting_tip = false
resharper_space_within_single_line_array_initializer_braces = false
resharper_special_else_if_treatment = true
resharper_static_members_qualify_members = none, field, property, event, method
resharper_trailing_comma_in_multiline_lists = false
resharper_trailing_comma_in_singleline_lists = false
resharper_use_continuous_indent_inside_initializer_braces = false
resharper_use_indent_from_vs = false
resharper_wrap_arguments_style = wrap_if_long
resharper_wrap_before_first_method_call = false
resharper_wrap_chained_method_calls = chop_always
resharper_wrap_for_stmt_header_style = wrap_if_long
resharper_wrap_object_and_collection_initializer_style = wrap_if_long
resharper_wrap_text = false
resharper_xmldoc_attribute_indent = align_by_first_attribute
resharper_xmldoc_indent_child_elements = RemoveIndent
resharper_xmldoc_indent_text = RemoveIndent
resharper_xmldoc_keep_user_linebreaks = true
resharper_xmldoc_linebreaks_inside_tags_for_elements_with_child_elements = false
resharper_xmldoc_linebreaks_inside_tags_for_multiline_elements = true
resharper_xmldoc_linebreak_before_multiline_elements = false
resharper_xmldoc_space_before_self_closing = false
resharper_xmldoc_wrap_around_elements = false
resharper_xmldoc_wrap_lines = false
resharper_xmldoc_wrap_tags_and_pi = false

# ReSharper inspection severities
resharper_arguments_style_literal_highlighting = suggestion
resharper_arrange_attributes_highlighting = warning
resharper_arrange_default_value_when_type_evident_highlighting = warning
resharper_arrange_default_value_when_type_not_evident_highlighting = warning
resharper_arrange_null_checking_pattern_highlighting = none
resharper_arrange_object_creation_when_type_evident_highlighting = warning
resharper_arrange_object_creation_when_type_not_evident_highlighting = warning
resharper_arrange_static_member_qualifier_highlighting = warning
resharper_arrange_trailing_comma_in_multiline_lists_highlighting = warning
resharper_arrange_trailing_comma_in_singleline_lists_highlighting = warning
resharper_auto_property_can_be_made_get_only_local_highlighting = hint
resharper_check_namespace_highlighting = none
resharper_class_can_be_sealed_local_highlighting = suggestion
resharper_class_with_virtual_members_never_inherited_global_highlighting = none
resharper_comment_typo_highlighting = none
resharper_field_can_be_made_read_only_local_highlighting = none
resharper_identifier_typo_highlighting = none
resharper_markup_attribute_typo_highlighting = none
resharper_markup_text_typo_highlighting = none
resharper_member_can_be_private_global_highlighting = none
resharper_method_overload_with_optional_parameter_highlighting = hint
resharper_partial_type_with_single_part_highlighting = none
resharper_possibly_impure_method_call_on_readonly_variable_highlighting = error
resharper_redundant_bool_compare_highlighting = none
resharper_redundant_default_member_initializer_highlighting = none
resharper_remove_redundant_braces_highlighting = none
resharper_replace_substring_with_range_indexer_highlighting = none
resharper_suggest_discard_declaration_var_style_highlighting = warning
resharper_unity_redundant_hide_in_inspector_attribute_highlighting = none
resharper_unused_member_global_highlighting = none
resharper_web_config_module_not_resolved_highlighting = warning
resharper_web_config_type_not_resolved_highlighting = warning
resharper_web_config_wrong_module_highlighting = warning

# Standard properties
max_line_length = 200

[*.{appxmanifest,asax,ascx,aspx,axaml,build,c,c++,c++m,cc,ccm,cginc,compute,cp,cpp,cppm,cs,cshtml,cu,cuh,cxx,cxxm,dtd,fs,fsi,fsscript,fsx,fx,fxh,h,hh,hlsl,hlsli,hlslinc,hpp,hxx,inc,inl,ino,ipp,ixx,master,ml,mli,mpp,mq4,mq5,mqh,mxx,nuspec,paml,razor,resw,resx,shader,skin,tpp,usf,ush,uxml,vb,xaml,xamlx,xoml,xsd}]
indent_style = space
indent_size = 4
tab_width = 4
